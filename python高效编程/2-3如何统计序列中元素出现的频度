2-3如何统计序列中元素出现的频度

实际案例：
1.某随机序列[12,5,3,4,6,5,5,7,...]中，找到出现次数最高的3个元素，它们出现的次数是多少？
2.对某英文文章的单词，进行词频统计，找到出现次数最高的10个单词，它们的出现次数是多少？

解决方案：
1.
方法一：利用字典解析实现
from random import randint # 导入随机数模块
data = [randint(0, 20) for i in range(30)] # 生成长度为30且有重复的序列
c = dict.fromkeys(data, 0) # 将序列中出现的数字存入字典，并给定value为0
for x in data: # 迭代data，统计各数字出现的次数并写入字典的value中
    c[x] += 1
result = sorted(c.items(), key=lambda x: x[1], reverse=True) # 利用sorted函数进行排序

方法二：利用collections.Counter对象
from collections import Counter # 导入collections.Counter对象
c2 = Counter(data) # 利用Counter可以直接统计出各序列出现的次数
c2.most_common(3) # 利用Counter.most_common(n)可直接得到频度最高的前n个


2.
利用re模块将文章存入列表，然后用Counter处理
from collections import Counter
import re
txt = open('file').read() # 打开文件并存为txt
c3 = Counter(re.split('\W+'.txt)) # 统计txt中各词出现的次数
c3.most_common(n) # 得到文章中出现频度前n的单词


